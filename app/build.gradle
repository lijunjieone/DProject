plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}
apply plugin: 'hunter-debug'

debugHunterExt {
    runVariant = 'NEVER'
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "com.a.dproject"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.3'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2'

    implementation project(":helper")
    implementation project(":annotation-processor4")
    kapt project(":annotation-processor4")

    api "com.google.ar:core:$rootProject.ext.arCoreVersion"
    api "com.google.ar.sceneform.ux:sceneform-ux:$rootProject.ext.sceneFormVersion"
    api "com.google.ar.sceneform:core:$rootProject.ext.sceneFormVersion"
    implementation "com.google.ar.sceneform:animation:$rootProject.ext.sceneFormVersion"
    implementation "com.google.ar.sceneform:assets:$rootProject.ext.sceneFormVersion"


//    implementation "frankiesardo:auto-parcel:$autoparcel_version"
//    kapt "frankiesardo:auto-parcel:$autoparcel_version"

    implementation 'com.github.android-notes.SwissArmyKnife:saklib:3.0.1-alpha1'
//    implementation("com.squareup.moshi:moshi:1.11.0")
    implementation("com.squareup.moshi:moshi-kotlin:1.11.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.11.0")

    //dagger2，这个可以写在BaseMoudle里
    api "com.google.dagger:dagger:$dagger_version"
    //多模块项目，这个必须在使用到dagger2的所有moudle里都配置
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation 'com.quinn.hunter:hunter-debug-library:0.9.6'
    implementation 'org.apache.commons:commons-lang3:3.7'


    // network
    implementation "com.github.skydoves:sandwich:$versions.sandwichVersion"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttpVersion"

    // debugging
    implementation "com.jakewharton.timber:timber:$versions.timberVersion"

    // startup
    implementation "androidx.startup:startup-runtime:$versions.startupVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"

    // architecture components
    implementation "androidx.fragment:fragment-ktx:$versions.fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycleVersion"
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"
    testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"



    // whatIf
    implementation "com.github.skydoves:whatif:$versions.whatIfVersion"


    implementation 'com.permissionx.guolindev:permissionx:1.4.0'


    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


    // 只使用选择，没有预览功能
    implementation 'com.chends.mediapickerx:picker:0.1.0'
    // 使用预览，包含选择和预览
    implementation 'com.chends.mediapickerx:picker_preview:0.1.0'
}